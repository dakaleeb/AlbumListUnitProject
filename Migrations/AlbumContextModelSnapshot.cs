// <auto-generated />
using AlbumListUnitProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AlbumListUnitProject.Migrations
{
    [DbContext(typeof(AlbumContext))]
    partial class AlbumContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlbumListUnitProject.Models.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AlbumId"));

                    b.Property<string>("AlbumDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AlbumName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AlbumRating")
                        .HasColumnType("int");

                    b.Property<int>("ArtistID")
                        .HasColumnType("int");

                    b.Property<int>("GenreID")
                        .HasColumnType("int");

                    b.HasKey("AlbumId");

                    b.HasIndex("ArtistID");

                    b.HasIndex("GenreID");

                    b.ToTable("Albums");

                    b.HasData(
                        new
                        {
                            AlbumId = 2,
                            AlbumDescription = "I havn't listened to the whole album, but I love alot of the tracks on this album",
                            AlbumName = "SOS",
                            AlbumRating = 8,
                            ArtistID = 2,
                            GenreID = 2
                        },
                        new
                        {
                            AlbumId = 1,
                            AlbumDescription = "The last album made before his untimley death. It talked about his mental health from when his career started to now",
                            AlbumName = "Swimming",
                            AlbumRating = 9,
                            ArtistID = 1,
                            GenreID = 1
                        },
                        new
                        {
                            AlbumId = 3,
                            AlbumDescription = "I love all the tracks in this one, but do I wanna know takes the cake.",
                            AlbumName = "AM",
                            AlbumRating = 10,
                            ArtistID = 3,
                            GenreID = 3
                        });
                });

            modelBuilder.Entity("AlbumListUnitProject.Models.Artist", b =>
                {
                    b.Property<int>("ArtistID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArtistID"));

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ArtistID");

                    b.ToTable("Artists");

                    b.HasData(
                        new
                        {
                            ArtistID = 1,
                            ArtistName = "Mac Miller"
                        },
                        new
                        {
                            ArtistID = 2,
                            ArtistName = "SZA"
                        },
                        new
                        {
                            ArtistID = 3,
                            ArtistName = "Arctic Monkeys"
                        });
                });

            modelBuilder.Entity("AlbumListUnitProject.Models.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenreID"));

                    b.Property<string>("GenreName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenreID");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            GenreID = 1,
                            GenreName = "Rap"
                        },
                        new
                        {
                            GenreID = 2,
                            GenreName = "RnB"
                        },
                        new
                        {
                            GenreID = 3,
                            GenreName = "Rock"
                        },
                        new
                        {
                            GenreID = 4,
                            GenreName = "EDM"
                        },
                        new
                        {
                            GenreID = 5,
                            GenreName = "Pop"
                        },
                        new
                        {
                            GenreID = 6,
                            GenreName = "Country"
                        });
                });

            modelBuilder.Entity("AlbumListUnitProject.Models.Album", b =>
                {
                    b.HasOne("AlbumListUnitProject.Models.Artist", "Artist")
                        .WithMany()
                        .HasForeignKey("ArtistID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AlbumListUnitProject.Models.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Artist");

                    b.Navigation("Genre");
                });
#pragma warning restore 612, 618
        }
    }
}
